{"remainingRequest":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\docs\\README.md?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\docs\\README.md","mtime":1612544950855},{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\34630\\Desktop\\myblog\\blog\\ValjeansBlog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiNpZmRlZiBHTF9FUwovL3ByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgZmxvYXQ7CiNlbmRpZgp1bmlmb3JtIHNhbXBsZXIyRCB1U3JjOwp1bmlmb3JtIHNhbXBsZXIyRCB1Qmxvb207CnVuaWZvcm0gdmVjMiB1RGVsdGE7CnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWMyIHNjcmVlbkNvb3JkOwp2b2lkIG1haW4odm9pZCkgewogICAgdmVjNCBzcmNjb2wgPSB0ZXh0dXJlMkQodVNyYywgdGV4Q29vcmQpICogMi4wOwogICAgdmVjNCBibG9vbWNvbCA9IHRleHR1cmUyRCh1Qmxvb20sIHRleENvb3JkKTsKICAgIHZlYzQgY29sOwogICAgY29sID0gc3JjY29sICsgYmxvb21jb2wgKiAodmVjNCgxLjApICsgc3JjY29sKTsKICAgIGNvbCAqPSBzbW9vdGhzdGVwKDEuMCwgMC4wLCBwb3cobGVuZ3RoKCh0ZXhDb29yZCAtIHZlYzIoMC41KSkgKiAyLjApLCAxLjIpICogMC41KTsKICAgIGNvbCA9IHBvdyhjb2wsIHZlYzQoMC40NTQ1NDU0NTQ1NDU0NSkpOyAvLygxLjAgLyAyLjIpCiAgICAKICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoY29sLnJnYiwgMS4wKTsKICAgIGdsX0ZyYWdDb2xvci5hID0gMS4wOwp9Cg=="},{"version":3,"sources":["README.md"],"names":[],"mappingskCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"README.md","sourceRoot":"docs","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><!Doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>萧寒</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n#text{\n    position: absolute;\n    text-align: center;\n    z-index: 999;\n    width: 100%;\n    height:100px;\n}\n#text>.span{\n    font-weight: 700;\n    font-size: 27px;\n    color: #E2B2AD;\n    margin-top: 22%;\n}\n.title{\n    font-size: 40px;\n    color: rgb(250, 185, 230);\n}\n.last{\n    margin-top: 22%;\n    font-size: 17px;\n    color: dimgrey;\n    margin-left: 90%;\n}\n</style>\n<body><div id=\"text\">\n    <div class=\"title\">sakura</div>\n    <div class=\"span\">好喜欢你，就像风走了三万里</div>\n    <div class=\"last\">To Qy</div>\n</div>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n<!-- sakura shader -->\n<!-- effects -->\n<!-- effect fragment shader template -->\n<!-- post processing -->\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>m[0] = 2.0 * near / w;\nm[1] = 0.0;\nm[2] = 0.0;\nm[3] = 0.0;\n\nm[4] = 0.0;\nm[5] = 2.0 * near / h;\nm[6] = 0.0;\nm[7] = 0.0;\n\nm[8] = 0.0;\nm[9] = 0.0;\nm[10] = -(far + near) / (far - near);\nm[11] = -1.0;\n\nm[12] = 0.0;\nm[13] = 0.0;\nm[14] = -2.0 * far * near / (far - near);\nm[15] = 0.0;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\nvar frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\nVector3.normalize(frontv);\nvar sidev = Vector3.create(1.0, 0.0, 0.0);\nVector3.cross(sidev, vup, frontv);\nVector3.normalize(sidev);\nvar topv = Vector3.create(1.0, 0.0, 0.0);\nVector3.cross(topv, frontv, sidev);\nVector3.normalize(topv);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>m[0] = sidev.x;\nm[1] = topv.x;\nm[2] = frontv.x;\nm[3] = 0.0;\n\nm[4] = sidev.y;\nm[5] = topv.y;\nm[6] = frontv.y;\nm[7] = 0.0;\n\nm[8] = sidev.z;\nm[9] = topv.z;\nm[10] = frontv.z;\nm[11] = 0.0;\n\nm[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\nm[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\nm[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\nm[15] = 1.0;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>};</p>\n<p>//\nvar timeInfo = {\n'start':0, 'prev':0, // Date\n'delta':0, 'elapsed':0 // Number(sec)\n};</p>\n<p>//\nvar gl;\nvar renderSpec = {\n'width':0,\n'height':0,\n'aspect':1,\n'array':new Float32Array(3),\n'halfWidth':0,\n'halfHeight':0,\n'halfArray':new Float32Array(3)\n// and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\nrenderSpec.width = w;\nrenderSpec.height = h;\nrenderSpec.aspect = renderSpec.width / renderSpec.height;\nrenderSpec.array[0] = renderSpec.width;\nrenderSpec.array[1] = renderSpec.height;\nrenderSpec.array[2] = renderSpec.aspect;</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>renderSpec.halfWidth = Math.floor(w / 2);\nrenderSpec.halfHeight = Math.floor(h / 2);\nrenderSpec.halfArray[0] = renderSpec.halfWidth;\nrenderSpec.halfArray[1] = renderSpec.halfHeight;\nrenderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>};</p>\n<p>function deleteRenderTarget(rt) {\ngl.deleteFramebuffer(rt.frameBuffer);\ngl.deleteRenderbuffer(rt.renderBuffer);\ngl.deleteTexture(rt.texture);\n}</p>\n<p>function createRenderTarget(w, h) {\nvar ret = {\n'width':w,\n'height':h,\n'sizeArray':new Float32Array([w, h, w / h]),\n'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n};\nret.frameBuffer = gl.createFramebuffer();\nret.renderBuffer = gl.createRenderbuffer();\nret.texture = gl.createTexture();</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>gl.bindTexture(gl.TEXTURE_2D, ret.texture);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\ngl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\ngl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n\ngl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\ngl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\ngl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n\ngl.bindTexture(gl.TEXTURE_2D, null);\ngl.bindRenderbuffer(gl.RENDERBUFFER, null);\ngl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\nreturn ret;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function compileShader(shtype, shsrc) {\nvar retsh = gl.createShader(shtype);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>gl.shaderSource(retsh, shsrc);\ngl.compileShader(retsh);\n\nif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\tvar errlog = gl.getShaderInfoLog(retsh);\n\tgl.deleteShader(retsh);\n\tconsole.error(errlog);\n\treturn null;\n}\nreturn retsh;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\nvar vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\nvar fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>if(vsh == null || fsh == null) {\n    return null;\n}\n\nvar prog = gl.createProgram();\ngl.attachShader(prog, vsh);\ngl.attachShader(prog, fsh);\n\ngl.deleteShader(vsh);\ngl.deleteShader(fsh);\n\ngl.linkProgram(prog);\nif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n    var errlog = gl.getProgramInfoLog(prog);\n    console.error(errlog);\n    return null;\n}\n\nif(uniformlist) {\n    prog.uniforms = {};\n    for(var i = 0; i &lt; uniformlist.length; i++) {\n        prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n    }\n}\n\nif(attrlist) {\n    prog.attributes = {};\n    for(var i = 0; i &lt; attrlist.length; i++) {\n        var attr = attrlist[i];\n        prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n    }\n}\n\nreturn prog;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function useShader(prog) {\ngl.useProgram(prog);\nfor(var attr in prog.attributes) {\ngl.enableVertexAttribArray(prog.attributes[attr]);;\n}\n}</p>\n<p>function unuseShader(prog) {\nfor(var attr in prog.attributes) {\ngl.disableVertexAttribArray(prog.attributes[attr]);;\n}\ngl.useProgram(null);\n}</p>\n<p>/////\nvar projection = {\n'angle':60,\n'nearfar':new Float32Array([0.1, 100.0]),\n'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n'position':Vector3.create(0, 0, 100),\n'lookat':Vector3.create(0, 0, 0),\n'up':Vector3.create(0, 1, 0),\n'dof':Vector3.create(10.0, 4.0, 8.0),\n'matrix':Matrix44.createIdentity()\n};</p>\n<p>var pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;</p>\n<p>var BlossomParticle = function () {\nthis.velocity = new Array(3);\nthis.rotation = new Array(3);\nthis.position = new Array(3);\nthis.euler = new Array(3);\nthis.size = 1.0;\nthis.alpha = 1.0;\nthis.zkey = 0.0;\n};</p>\n<p>BlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\nthis.velocity[0] = vx;\nthis.velocity[1] = vy;\nthis.velocity[2] = vz;\n};</p>\n<p>BlossomParticle.prototype.setRotation = function (rx, ry, rz) {\nthis.rotation[0] = rx;\nthis.rotation[1] = ry;\nthis.rotation[2] = rz;\n};</p>\n<p>BlossomParticle.prototype.setPosition = function (nx, ny, nz) {\nthis.position[0] = nx;\nthis.position[1] = ny;\nthis.position[2] = nz;\n};</p>\n<p>BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\nthis.euler[0] = rx;\nthis.euler[1] = ry;\nthis.euler[2] = rz;\n};</p>\n<p>BlossomParticle.prototype.setSize = function (s) {\nthis.size = s;\n};</p>\n<p>BlossomParticle.prototype.update = function (dt, et) {\nthis.position[0] += this.velocity[0] * dt;\nthis.position[1] += this.velocity[1] * dt;\nthis.position[2] += this.velocity[2] * dt;</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>this.euler[0] += this.rotation[0] * dt;\nthis.euler[1] += this.rotation[1] * dt;\nthis.euler[2] += this.rotation[2] * dt;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>};</p>\n<p>function createPointFlowers() {\n// get point sizes\nvar prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\nrenderSpec.pointSize = {'min':prm[0], 'max':prm[1]};</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>var vtxsrc = document.getElementById(&quot;sakura_point_vsh&quot;).textContent;\nvar frgsrc = document.getElementById(&quot;sakura_point_fsh&quot;).textContent;\n\npointFlower.program = createShader(\n    vtxsrc, frgsrc,\n    ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n    ['aPosition', 'aEuler', 'aMisc']\n);\n\nuseShader(pointFlower.program);\npointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\npointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n// paramerters: velocity[3], rotate[3]\npointFlower.numFlowers = 1600;\npointFlower.particles = new Array(pointFlower.numFlowers);\n// vertex attributes {position[3], euler_xyz[3], size[1]}\npointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\npointFlower.positionArrayOffset = 0;\npointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\npointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\npointFlower.buffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\ngl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\ngl.bindBuffer(gl.ARRAY_BUFFER, null);\n\nunuseShader(pointFlower.program);\n\nfor(var i = 0; i &lt; pointFlower.numFlowers; i++) {\n    pointFlower.particles[i] = new BlossomParticle();\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function initPointFlowers() {\n//area\npointFlower.area = Vector3.create(20.0, 20.0, 20.0);\npointFlower.area.x = pointFlower.area.y * renderSpec.aspect;</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>pointFlower.fader.x = 10.0; //env fade start\npointFlower.fader.y = pointFlower.area.z; //env fade half\npointFlower.fader.z = 0.1;  //near fade start\n\n//particles\nvar PI2 = Math.PI * 2.0;\nvar tmpv3 = Vector3.create(0, 0, 0);\nvar tmpv = 0;\nvar symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\nfor(var i = 0; i &lt; pointFlower.numFlowers; i++) {\n    var tmpprtcl = pointFlower.particles[i];\n    \n    //velocity\n    tmpv3.x = symmetryrand() * 0.3 + 0.8;\n    tmpv3.y = symmetryrand() * 0.2 - 1.0;\n    tmpv3.z = symmetryrand() * 0.3 + 0.5;\n    Vector3.normalize(tmpv3);\n    tmpv = 2.0 + Math.random() * 1.0;\n    tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n    \n    //rotation\n    tmpprtcl.setRotation(\n        symmetryrand() * PI2 * 0.5,\n        symmetryrand() * PI2 * 0.5,\n        symmetryrand() * PI2 * 0.5\n    );\n    \n    //position\n    tmpprtcl.setPosition(\n        symmetryrand() * pointFlower.area.x,\n        symmetryrand() * pointFlower.area.y,\n        symmetryrand() * pointFlower.area.z\n    );\n    \n    //euler\n    tmpprtcl.setEulerAngles(\n        Math.random() * Math.PI * 2.0,\n        Math.random() * Math.PI * 2.0,\n        Math.random() * Math.PI * 2.0\n    );\n    \n    //size\n    tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function renderPointFlowers() {\n//update\nvar PI2 = Math.PI * 2.0;\nvar limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\nvar repeatPos = function (prt, cmp, limit) {\nif(Math.abs(prt.position[cmp]) - prt.size * 0.5 &gt; limit) {\n//out of area\nif(prt.position[cmp] &gt; 0) {\nprt.position[cmp] -= limit * 2.0;\n}\nelse {\nprt.position[cmp] += limit * 2.0;\n}\n}\n};\nvar repeatEuler = function (prt, cmp) {\nprt.euler[cmp] = prt.euler[cmp] % PI2;\nif(prt.euler[cmp] &lt; 0.0) {\nprt.euler[cmp] += PI2;\n}\n};</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>for(var i = 0; i &lt; pointFlower.numFlowers; i++) {\n    var prtcl = pointFlower.particles[i];\n    prtcl.update(timeInfo.delta, timeInfo.elapsed);\n    repeatPos(prtcl, 0, pointFlower.area.x);\n    repeatPos(prtcl, 1, pointFlower.area.y);\n    repeatPos(prtcl, 2, pointFlower.area.z);\n    repeatEuler(prtcl, 0);\n    repeatEuler(prtcl, 1);\n    repeatEuler(prtcl, 2);\n    \n    prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n    \n    prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                + camera.matrix[6] * prtcl.position[1]\n                + camera.matrix[10] * prtcl.position[2]\n                + camera.matrix[14]);\n}\n\n// sort\npointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n\n// update data\nvar ipos = pointFlower.positionArrayOffset;\nvar ieuler = pointFlower.eulerArrayOffset;\nvar imisc = pointFlower.miscArrayOffset;\nfor(var i = 0; i &lt; pointFlower.numFlowers; i++) {\n    var prtcl = pointFlower.particles[i];\n    pointFlower.dataArray[ipos] = prtcl.position[0];\n    pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n    pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n    ipos += 3;\n    pointFlower.dataArray[ieuler] = prtcl.euler[0];\n    pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n    pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n    ieuler += 3;\n    pointFlower.dataArray[imisc] = prtcl.size;\n    pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n    imisc += 2;\n}\n\n//draw\ngl.enable(gl.BLEND);\n//gl.disable(gl.DEPTH_TEST);\ngl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\nvar prog = pointFlower.program;\nuseShader(prog);\n\ngl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\ngl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\ngl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\ngl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\ngl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\ngl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\ngl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\ngl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\ngl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\ngl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n\n// doubler\nfor(var i = 1; i &lt; 2; i++) {\n    var zpos = i * -2.0;\n    pointFlower.offset[0] = pointFlower.area.x * -1.0;\n    pointFlower.offset[1] = pointFlower.area.y * -1.0;\n    pointFlower.offset[2] = pointFlower.area.z * zpos;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    pointFlower.offset[0] = pointFlower.area.x * -1.0;\n    pointFlower.offset[1] = pointFlower.area.y *  1.0;\n    pointFlower.offset[2] = pointFlower.area.z * zpos;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    pointFlower.offset[0] = pointFlower.area.x *  1.0;\n    pointFlower.offset[1] = pointFlower.area.y * -1.0;\n    pointFlower.offset[2] = pointFlower.area.z * zpos;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    pointFlower.offset[0] = pointFlower.area.x *  1.0;\n    pointFlower.offset[1] = pointFlower.area.y *  1.0;\n    pointFlower.offset[2] = pointFlower.area.z * zpos;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n}\n\n//main\npointFlower.offset[0] = 0.0;\npointFlower.offset[1] = 0.0;\npointFlower.offset[2] = 0.0;\ngl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\ngl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\ngl.bindBuffer(gl.ARRAY_BUFFER, null);\nunuseShader(prog);\n\ngl.enable(gl.DEPTH_TEST);\ngl.disable(gl.BLEND);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\nvar ret = {};\nvar unifs = ['uResolution', 'uSrc', 'uDelta'];\nif(exunifs) {\nunifs = unifs.concat(exunifs);\n}\nvar attrs = ['aPosition'];\nif(exattrs) {\nattrs = attrs.concat(exattrs);\n}</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\nuseShader(ret.program);\n\nret.dataArray = new Float32Array([\n    -1.0, -1.0,\n     1.0, -1.0,\n    -1.0,  1.0,\n     1.0,  1.0\n]);\nret.buffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\ngl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\ngl.bindBuffer(gl.ARRAY_BUFFER, null);\nunuseShader(ret.program);\n\nreturn ret;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\nvar prog = fxobj.program;\nuseShader(prog);\ngl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>if(srctex != null) {\n    gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n    gl.uniform1i(prog.uniforms.uSrc, 0);\n    \n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}\nfunction drawEffect(fxobj) {\ngl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\ngl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\ngl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\nunuseShader(fxobj.program);\n}</p>\n<p>var effectLib = {};\nfunction createEffectLib() {</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>var vtxsrc, frgsrc;\n//common\nvar cmnvtxsrc = document.getElementById(&quot;fx_common_vsh&quot;).textContent;\n\n//background\nfrgsrc = document.getElementById(&quot;bg_fsh&quot;).textContent;\neffectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n\n// make brightpixels buffer\nfrgsrc = document.getElementById(&quot;fx_brightbuf_fsh&quot;).textContent;\neffectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n\n// direction blur\nfrgsrc = document.getElementById(&quot;fx_dirblur_r4_fsh&quot;).textContent;\neffectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n\n//final composite\nvtxsrc = document.getElementById(&quot;pp_final_vsh&quot;).textContent;\nfrgsrc = document.getElementById(&quot;pp_final_fsh&quot;).textContent;\neffectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>// background\nfunction createBackground() {\n//console.log(&quot;create background&quot;);\n}\nfunction initBackground() {\n//console.log(&quot;init background&quot;);\n}\nfunction renderBackground() {\ngl.disable(gl.DEPTH_TEST);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>useEffect(effectLib.sceneBg, null);\ngl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\ndrawEffect(effectLib.sceneBg);\nunuseEffect(effectLib.sceneBg);\n\ngl.enable(gl.DEPTH_TEST);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>// post process\nvar postProcess = {};\nfunction createPostProcess() {\n//console.log(&quot;create post process&quot;);\n}\nfunction initPostProcess() {\n//console.log(&quot;init post process&quot;);\n}</p>\n<p>function renderPostProcess() {\ngl.enable(gl.TEXTURE_2D);\ngl.disable(gl.DEPTH_TEST);\nvar bindRT = function (rt, isclear) {\ngl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\ngl.viewport(0, 0, rt.width, rt.height);\nif(isclear) {\ngl.clearColor(0, 0, 0, 0);\ngl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n}\n};</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>//make bright buff\nbindRT(renderSpec.wHalfRT0, true);\nuseEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\ndrawEffect(effectLib.mkBrightBuf);\nunuseEffect(effectLib.mkBrightBuf);\n\n// make bloom\nfor(var i = 0; i &lt; 2; i++) {\n    var p = 1.5 + 1 * i;\n    var s = 2.0 + 1 * i;\n    bindRT(renderSpec.wHalfRT1, true);\n    useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n    gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n    drawEffect(effectLib.dirBlur);\n    unuseEffect(effectLib.dirBlur);\n    \n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n    gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n    drawEffect(effectLib.dirBlur);\n    unuseEffect(effectLib.dirBlur);\n}\n\n//display\ngl.bindFramebuffer(gl.FRAMEBUFFER, null);\ngl.viewport(0, 0, renderSpec.width, renderSpec.height);\ngl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\nuseEffect(effectLib.finalComp, renderSpec.mainRT);\ngl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\ngl.activeTexture(gl.TEXTURE1);\ngl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\ndrawEffect(effectLib.finalComp);\nunuseEffect(effectLib.finalComp);\n\ngl.enable(gl.DEPTH_TEST);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>/////\nvar SceneEnv = {};\nfunction createScene() {\ncreateEffectLib();\ncreateBackground();\ncreatePointFlowers();\ncreatePostProcess();\nsceneStandBy = true;\n}</p>\n<p>function initScene() {\ninitBackground();\ninitPointFlowers();\ninitPostProcess();</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>//camera.position.z = 17.320508;\ncamera.position.z = pointFlower.area.z + projection.nearfar[0];\nprojection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\nMatrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function renderScene() {\n//draw\nMatrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>gl.enable(gl.DEPTH_TEST);\n\n//gl.bindFramebuffer(gl.FRAMEBUFFER, null);\ngl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\ngl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\ngl.clearColor(0.005, 0, 0.05, 0);\ngl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\nrenderBackground();\nrenderPointFlowers();\nrenderPostProcess();\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>/////\nfunction onResize(e) {\nmakeCanvasFullScreen(document.getElementById(&quot;sakura&quot;));\nsetViewports();\nif(sceneStandBy) {\ninitScene();\n}\n}</p>\n<p>function setViewports() {\nrenderSpec.setSize(gl.canvas.width, gl.canvas.height);</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>gl.clearColor(0.2, 0.2, 0.5, 1.0);\ngl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\nvar rtfunc = function (rtname, rtw, rth) {\n    var rt = renderSpec[rtname];\n    if(rt) deleteRenderTarget(rt);\n    renderSpec[rtname] = createRenderTarget(rtw, rth);\n};\nrtfunc('mainRT', renderSpec.width, renderSpec.height);\nrtfunc('wFullRT0', renderSpec.width, renderSpec.height);\nrtfunc('wFullRT1', renderSpec.width, renderSpec.height);\nrtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\nrtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function render() {\nrenderScene();\n}</p>\n<p>var animating = true;\nfunction toggleAnimation(elm) {\nanimating ^= true;\nif(animating) animate();\nif(elm) {\nelm.innerHTML = animating? &quot;Stop&quot;:&quot;Start&quot;;\n}\n}</p>\n<p>function stepAnimation() {\nif(!animating) animate();\n}</p>\n<p>function animate() {\nvar curdate = new Date();\ntimeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\ntimeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\ntimeInfo.prev = curdate;</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>if(animating) requestAnimationFrame(animate);\nrender();\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>}</p>\n<p>function makeCanvasFullScreen(canvas) {\nvar b = document.body;\nvar d = document.documentElement;\nfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\nfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\ncanvas.width = fullw;\ncanvas.height = fullh;\n}</p>\n<p>window.addEventListener('load', function(e) {\nvar canvas = document.getElementById(&quot;sakura&quot;);\ntry {\nmakeCanvasFullScreen(canvas);\ngl = canvas.getContext('experimental-webgl');\n} catch(e) {\nalert(&quot;WebGL not supported.&quot; + e);\nconsole.error(e);\nreturn;\n}</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>window.addEventListener('resize', onResize);\n\nsetViewports();\ncreateScene();\ninitScene();\n\ntimeInfo.start = new Date();\ntimeInfo.prev = timeInfo.start;\nanimate();\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>});</p>\n<p>//set window.requestAnimationFrame\n(function (w, r) {\nw['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html></p>\n</ContentSlotsDistributor>\n</template>\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n    \n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n    \n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n    \n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n    \n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n    \n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n    \n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n    \n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n    \n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n    \n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n    \n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n    \n    if(r > rstop) discard;\n    \n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n    \n    col = mix(fadeCol, col, distancefade);\n    \n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n    \n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n    \n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n\n\n"]}]}