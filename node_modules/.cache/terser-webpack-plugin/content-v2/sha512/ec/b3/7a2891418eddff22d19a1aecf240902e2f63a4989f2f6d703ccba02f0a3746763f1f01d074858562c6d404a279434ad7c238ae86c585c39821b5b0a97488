{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{307:function(t,s,n){\"use strict\";function a(t,s,n,a,e,r,p,o){var _,c=\"function\"==typeof t?t.options:t;if(s&&(c.render=s,c.staticRenderFns=n,c._compiled=!0),a&&(c.functional=!0),r&&(c._scopeId=\"data-v-\"+r),p?(_=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(p)},c._ssrRegister=_):e&&(_=o?function(){e.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:e),_)if(c.functional){c._injectStyles=_;var v=c.render;c.render=function(t,s){return _.call(s),v(t,s)}}else{var l=c.beforeCreate;c.beforeCreate=l?[].concat(l,_):[_]}return{exports:t,options:c}}n.d(s,\"a\",(function(){return a}))},409:function(t,s,n){\"use strict\";n.r(s);var a=n(307),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"new-操作符到底干了什么\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#new-操作符到底干了什么\"}},[t._v(\"#\")]),t._v(\" new 操作符到底干了什么\")]),t._v(\" \"),n(\"p\",[t._v(\"js 高级教程第四版 p221\")]),t._v(\" \"),n(\"p\",[t._v(\"使用 new 操作符调用构造函数，会执行如下操作：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[t._v(\"在内存中创建一个新对象。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"将这个对象的 \"),n(\"strong\",[t._v(\"proto\")]),t._v(\" 指针指向构造函数的 原型(prototype)。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"构造函数内部的 this 被赋值给这个对象 （即，this 指向新对象）。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"执行构造函数里面的代码。（给新对象增添属性）。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"如果构造函数返回空对象，则返回该对象，否则返回返回新创建的对象。\")])])]),t._v(\" \"),n(\"hr\"),t._v(\" \"),n(\"p\",[t._v(\"要理解上述操作，我们必须了解原型和原型链，还有构造函数。这些在下一讲中会讲到。\")]),t._v(\" \"),n(\"p\",[t._v(\"建议先看下一讲，再回来理解上述过程。\")]),t._v(\" \"),n(\"p\",[t._v(\"自己实现 new 操作符的功能\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"myNew\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"constructors\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 1, 创建一个空对象\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" obj \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 2, 将其 __proto__ 属性指向构造函数原型\")]),t._v(\"\\n    obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"__proto__ \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" constructors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 3, 改变 this 指针，执行构造函数\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" args \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"slice\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"call\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"arguments\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 获取构造参数,由于是类数组，所以调用 Array 上的slice方法\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"constructors\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" args\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 4, 若构造函数没有返回值，则返回实例，否则返回返回值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"res\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" res\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),n(\"br\")])]),n(\"hr\"),t._v(\" \"),n(\"p\",[t._v(\"其实，手写还是比较简单的，只要知道 new 干了什么一一实现就 ok 了。\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}